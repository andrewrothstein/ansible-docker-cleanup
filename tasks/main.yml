---
- name: compute prune command label filters
  when: item is not none
  set_fact:
    docker_cleanup_label_command_filter_flags: '{{ docker_cleanup_label_command_filter_flags + [ ("value" in item) | ternary([item.name, item.equal | default(True) | ternary("=", "!="), item.value | default(omit)] | join(""), item.name) ] }}'
  loop: '{{ query("list", docker_cleanup_label_filters) }}'

- name: aggregate prune command filters
  set_fact:
    docker_cleanup_command_filter_flags_vector: '{{ docker_cleanup_command_filter_flags_vector + [ "--filter=%s" | format(item | tojson) ] }}'
  loop: '{{ (docker_cleanup_label_command_filter_flags + [docker_cleanup_until_command_filter_flag]) | reject("eq", "") | list }}'

- name: configure docker object (:= {{ docker_cleanup_items | intersect(docker_cleanup_scoped_prune_commands.keys()) }} ) cleanup cron job
  become: yes
  become_user: root
  cron:
    name: 'Docker Garbage Collection'
    job: '{{ docker_cleanup_crond_job_command }}'
    disabled: '{{ not docker_cleanup_crond_enabled }}'
    month: '{{ ("month" in docker_cleanup_crontab_schedule) | ternary(docker_cleanup_crontab_schedule.month, omit) }}'
    weekday: '{{ ("weekday" in docker_cleanup_crontab_schedule) | ternary(docker_cleanup_crontab_schedule.weekday, omit) }}'
    day: '{{ ("day" in docker_cleanup_crontab_schedule) | ternary(docker_cleanup_crontab_schedule.day, omit) }}'
    hour: '{{ ("hour" in docker_cleanup_crontab_schedule) | ternary(docker_cleanup_crontab_schedule.hour, omit) }}'
    minute: '{{ ("minute" in docker_cleanup_crontab_schedule) | ternary(docker_cleanup_crontab_schedule.minute, omit) }}'
